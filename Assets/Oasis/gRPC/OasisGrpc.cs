// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: oasis.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Oasis.Grpc {
  public static partial class Oasis
  {
    static readonly string __ServiceName = "pb.Oasis";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.DomainName> __Marshaller_pb_DomainName = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.DomainName.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.Texture> __Marshaller_pb_Texture = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.Texture.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.Block> __Marshaller_pb_Block = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.Block.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.BlockState> __Marshaller_pb_BlockState = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.BlockState.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.Model> __Marshaller_pb_Model = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.Model.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.ChunkRequest> __Marshaller_pb_ChunkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.ChunkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.Chunk> __Marshaller_pb_Chunk = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.Chunk.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.PlaceRequest> __Marshaller_pb_PlaceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.PlaceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.Place> __Marshaller_pb_Place = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.Place.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.Blocks> __Marshaller_pb_Blocks = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.Blocks.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.Places> __Marshaller_pb_Places = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.Places.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.FeedRequest> __Marshaller_pb_FeedRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.FeedRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Oasis.Grpc.FeedResponse> __Marshaller_pb_FeedResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Oasis.Grpc.FeedResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Oasis.Grpc.DomainName, global::Oasis.Grpc.Texture> __Method_GetTexture = new grpc::Method<global::Oasis.Grpc.DomainName, global::Oasis.Grpc.Texture>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTexture",
        __Marshaller_pb_DomainName,
        __Marshaller_pb_Texture);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Oasis.Grpc.DomainName, global::Oasis.Grpc.Block> __Method_GetBlock = new grpc::Method<global::Oasis.Grpc.DomainName, global::Oasis.Grpc.Block>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBlock",
        __Marshaller_pb_DomainName,
        __Marshaller_pb_Block);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Oasis.Grpc.BlockState, global::Oasis.Grpc.Model> __Method_GetBlockState = new grpc::Method<global::Oasis.Grpc.BlockState, global::Oasis.Grpc.Model>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBlockState",
        __Marshaller_pb_BlockState,
        __Marshaller_pb_Model);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Oasis.Grpc.ChunkRequest, global::Oasis.Grpc.Chunk> __Method_GetChunk = new grpc::Method<global::Oasis.Grpc.ChunkRequest, global::Oasis.Grpc.Chunk>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetChunk",
        __Marshaller_pb_ChunkRequest,
        __Marshaller_pb_Chunk);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Oasis.Grpc.PlaceRequest, global::Oasis.Grpc.Place> __Method_GetPlace = new grpc::Method<global::Oasis.Grpc.PlaceRequest, global::Oasis.Grpc.Place>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPlace",
        __Marshaller_pb_PlaceRequest,
        __Marshaller_pb_Place);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Oasis.Grpc.DomainName, global::Oasis.Grpc.Blocks> __Method_SearchBlocks = new grpc::Method<global::Oasis.Grpc.DomainName, global::Oasis.Grpc.Blocks>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchBlocks",
        __Marshaller_pb_DomainName,
        __Marshaller_pb_Blocks);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Oasis.Grpc.PlaceRequest, global::Oasis.Grpc.Places> __Method_SearchPlaces = new grpc::Method<global::Oasis.Grpc.PlaceRequest, global::Oasis.Grpc.Places>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchPlaces",
        __Marshaller_pb_PlaceRequest,
        __Marshaller_pb_Places);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Oasis.Grpc.FeedRequest, global::Oasis.Grpc.FeedResponse> __Method_Feed = new grpc::Method<global::Oasis.Grpc.FeedRequest, global::Oasis.Grpc.FeedResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "Feed",
        __Marshaller_pb_FeedRequest,
        __Marshaller_pb_FeedResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Oasis.Grpc.OasisReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Oasis</summary>
    [grpc::BindServiceMethod(typeof(Oasis), "BindService")]
    public abstract partial class OasisBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Oasis.Grpc.Texture> GetTexture(global::Oasis.Grpc.DomainName request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Oasis.Grpc.Block> GetBlock(global::Oasis.Grpc.DomainName request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Oasis.Grpc.Model> GetBlockState(global::Oasis.Grpc.BlockState request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Oasis.Grpc.Chunk> GetChunk(global::Oasis.Grpc.ChunkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Oasis.Grpc.Place> GetPlace(global::Oasis.Grpc.PlaceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Oasis.Grpc.Blocks> SearchBlocks(global::Oasis.Grpc.DomainName request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Oasis.Grpc.Places> SearchPlaces(global::Oasis.Grpc.PlaceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task Feed(grpc::IAsyncStreamReader<global::Oasis.Grpc.FeedRequest> requestStream, grpc::IServerStreamWriter<global::Oasis.Grpc.FeedResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Oasis</summary>
    public partial class OasisClient : grpc::ClientBase<OasisClient>
    {
      /// <summary>Creates a new client for Oasis</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OasisClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Oasis that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OasisClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OasisClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OasisClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Texture GetTexture(global::Oasis.Grpc.DomainName request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTexture(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Texture GetTexture(global::Oasis.Grpc.DomainName request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTexture, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Texture> GetTextureAsync(global::Oasis.Grpc.DomainName request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTextureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Texture> GetTextureAsync(global::Oasis.Grpc.DomainName request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTexture, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Block GetBlock(global::Oasis.Grpc.DomainName request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlock(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Block GetBlock(global::Oasis.Grpc.DomainName request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBlock, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Block> GetBlockAsync(global::Oasis.Grpc.DomainName request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlockAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Block> GetBlockAsync(global::Oasis.Grpc.DomainName request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBlock, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Model GetBlockState(global::Oasis.Grpc.BlockState request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlockState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Model GetBlockState(global::Oasis.Grpc.BlockState request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBlockState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Model> GetBlockStateAsync(global::Oasis.Grpc.BlockState request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBlockStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Model> GetBlockStateAsync(global::Oasis.Grpc.BlockState request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBlockState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Chunk GetChunk(global::Oasis.Grpc.ChunkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChunk(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Chunk GetChunk(global::Oasis.Grpc.ChunkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetChunk, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Chunk> GetChunkAsync(global::Oasis.Grpc.ChunkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChunkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Chunk> GetChunkAsync(global::Oasis.Grpc.ChunkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetChunk, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Place GetPlace(global::Oasis.Grpc.PlaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlace(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Place GetPlace(global::Oasis.Grpc.PlaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPlace, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Place> GetPlaceAsync(global::Oasis.Grpc.PlaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPlaceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Place> GetPlaceAsync(global::Oasis.Grpc.PlaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPlace, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Blocks SearchBlocks(global::Oasis.Grpc.DomainName request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchBlocks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Blocks SearchBlocks(global::Oasis.Grpc.DomainName request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchBlocks, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Blocks> SearchBlocksAsync(global::Oasis.Grpc.DomainName request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchBlocksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Blocks> SearchBlocksAsync(global::Oasis.Grpc.DomainName request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchBlocks, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Places SearchPlaces(global::Oasis.Grpc.PlaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchPlaces(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Oasis.Grpc.Places SearchPlaces(global::Oasis.Grpc.PlaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchPlaces, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Places> SearchPlacesAsync(global::Oasis.Grpc.PlaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchPlacesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Oasis.Grpc.Places> SearchPlacesAsync(global::Oasis.Grpc.PlaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchPlaces, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Oasis.Grpc.FeedRequest, global::Oasis.Grpc.FeedResponse> Feed(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Feed(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Oasis.Grpc.FeedRequest, global::Oasis.Grpc.FeedResponse> Feed(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_Feed, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override OasisClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OasisClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(OasisBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetTexture, serviceImpl.GetTexture)
          .AddMethod(__Method_GetBlock, serviceImpl.GetBlock)
          .AddMethod(__Method_GetBlockState, serviceImpl.GetBlockState)
          .AddMethod(__Method_GetChunk, serviceImpl.GetChunk)
          .AddMethod(__Method_GetPlace, serviceImpl.GetPlace)
          .AddMethod(__Method_SearchBlocks, serviceImpl.SearchBlocks)
          .AddMethod(__Method_SearchPlaces, serviceImpl.SearchPlaces)
          .AddMethod(__Method_Feed, serviceImpl.Feed).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, OasisBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetTexture, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Oasis.Grpc.DomainName, global::Oasis.Grpc.Texture>(serviceImpl.GetTexture));
      serviceBinder.AddMethod(__Method_GetBlock, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Oasis.Grpc.DomainName, global::Oasis.Grpc.Block>(serviceImpl.GetBlock));
      serviceBinder.AddMethod(__Method_GetBlockState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Oasis.Grpc.BlockState, global::Oasis.Grpc.Model>(serviceImpl.GetBlockState));
      serviceBinder.AddMethod(__Method_GetChunk, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Oasis.Grpc.ChunkRequest, global::Oasis.Grpc.Chunk>(serviceImpl.GetChunk));
      serviceBinder.AddMethod(__Method_GetPlace, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Oasis.Grpc.PlaceRequest, global::Oasis.Grpc.Place>(serviceImpl.GetPlace));
      serviceBinder.AddMethod(__Method_SearchBlocks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Oasis.Grpc.DomainName, global::Oasis.Grpc.Blocks>(serviceImpl.SearchBlocks));
      serviceBinder.AddMethod(__Method_SearchPlaces, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Oasis.Grpc.PlaceRequest, global::Oasis.Grpc.Places>(serviceImpl.SearchPlaces));
      serviceBinder.AddMethod(__Method_Feed, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Oasis.Grpc.FeedRequest, global::Oasis.Grpc.FeedResponse>(serviceImpl.Feed));
    }

  }
}
#endregion
